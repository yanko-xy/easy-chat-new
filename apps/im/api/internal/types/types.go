// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2

package types

type ChatLog struct {
	Id             string `json:"id,omitempty"`
	ConversationId string `json:"conversationId,omitempty"`
	SendId         string `json:"sendId,omitempty"`
	RecvId         string `json:"recvId,omitempty"`
	MsgType        int32  `json:"msgType,omitempty"`
	MsgContent     string `json:"msgContent,omitempty"`
	ChatType       int32  `json:"chatType,omitempty"`
	SendTime       int64  `json:"sendTime,omitempty"`
}

type ChatLogReq struct {
	MsgId          string `path:"msgId,optional"`
	ConversationId string `form:"conversationId"`
	StartSendTime  int64  `path:"startSendTime,omitempty,optional"`
	EndSendTime    int64  `path:"endSendTime,omitempty,optional"`
	Count          int64  `path:"count,omitempty,optional"`
}

type ChatLogResp struct {
	List []*ChatLog `json:"list"`
}

type Conversation struct {
	ConversationId string `json:"conversationId,omitempty"`
	ChatType       int32  `json:"chatType,omitempty"`
	IsShow         bool   `json:"isShow,omitempty"`
	Seq            int64  `json:"seq,omitempty"`
	Read           int32  `json:"read,omitempty"`
	Total          int64  `json:"total,optional"`
	ToRead         int64  `json:"toRead,optional"`
	Msg            Msg    `json:"msg,optional,omitempty"`
}

type GetChatLogReadRecordsReq struct {
	MsgId string `json:"msgId"`
}

type GetChatLogReadRecordsResp struct {
	Reads   []string `json:"reads"`
	UnReads []string `json:"unReads"`
}

type GetConversationsReq struct {
}

type GetConversationsResp struct {
	ConversationList map[string]*Conversation `json:"conversationList"`
}

type Msg struct {
	MsgType    int32  `json:"msgType"`
	MsgContent string `json:"msgContent"`
}

type PutConversationsReq struct {
	ConversationList map[string]*Conversation `json:"conversationList"`
}

type PutConversationsResp struct {
}

type SetUpUserConversationReq struct {
	RecvId   string `json:"recvId,omitempty"`
	ChatType int32  `json:"chatType,omitempty"`
}

type SetUpUserConversationResp struct {
}
