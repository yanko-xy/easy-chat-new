syntax = "v1"


info (
	title: "im消息服务实例对象"
	author: "yanko"
)

type (
	ChatLog {
		Id             string `json:"id,omitempty"`
		ConversationId string `json:"conversationId,omitempty"`
		SendId         string `json:"sendId,omitempty"`
		RecvId         string `json:"recvId,omitempty"`
		MsgType        int32  `json:"msgType,omitempty"`
		MsgContent     string `json:"msgContent,omitempty"`
		ChatType       int32  `json:"chatType,omitempty"`
		SendTime       int64  `json:"sendTime,omitempty"`
	}

	Msg {
		MsgType        int32  `json:"msgType"`
		MsgContent     string `json:"msgContent"`
	}

	Conversation {
		ConversationId string `json:"conversationId,omitempty"`
		ChatType       int32  `json:"chatType,omitempty"`
		IsShow         bool   `json:"isShow,omitempty"`
		Seq            int64  `json:"seq,omitempty"`
		Read           int32  `json:"read,omitempty"`
		Total          int64  `json:"total,optional"`
		ToRead         int64  `json:"toRead,optional"`
		Msg            Msg    `json:"msg,optional,omitempty"`
	}
)

type (
	ChatLogReq {
		MsgId          string `form:"msgId,optional"`
		ConversationId string `form:"conversationId"`
		StartSendTime  int64  `form:"startSendTime,omitempty,optional"`
		EndSendTime    int64  `form:"endSendTime,omitempty,optional"`
		Count          int64  `form:"count,omitempty,optional"`
	}
	ChatLogResp {
		List []*ChatLog `json:"list"`
	}
	GetConversationsReq  {}
	GetConversationsResp {
		ConversationList map[string]*Conversation `form:"conversationList"`
	}
	PutConversationsReq {
		ConversationList map[string]*Conversation `json:"conversationList"`
	}
	PutConversationsResp  {}
	SetUpUserConversationReq {
		RecvId   string `json:"recvId,omitempty"`
		ChatType int32  `json:"chatType,omitempty"`
	}
	setUpUserConversationResp  {}
	GetChatLogReadRecordsReq {
		MsgId string `form:"msgId"`
	}
	GetChatLogReadRecordsResp {
		Reads   []string `json:"reads"`
		UnReads []string `json:"unReads"`
	}
)