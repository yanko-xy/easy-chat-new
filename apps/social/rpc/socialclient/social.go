// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: social.proto

package socialclient

import (
	"context"

	"github.com/yanko-xy/easy-chat/apps/social/rpc/social"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Friend                = social.Friend
	FriendListReq         = social.FriendListReq
	FriendListResp        = social.FriendListResp
	FriendPutInHandleReq  = social.FriendPutInHandleReq
	FriendPutInHandleResp = social.FriendPutInHandleResp
	FriendPutInListReq    = social.FriendPutInListReq
	FriendPutInListResp   = social.FriendPutInListResp
	FriendPutInReq        = social.FriendPutInReq
	FriendPutInResp       = social.FriendPutInResp
	FriendRequest         = social.FriendRequest
	Group                 = social.Group
	GroupCreateReq        = social.GroupCreateReq
	GroupCreateResp       = social.GroupCreateResp
	GroupListReq          = social.GroupListReq
	GroupListResp         = social.GroupListResp
	GroupMember           = social.GroupMember
	GroupPutInHandleReq   = social.GroupPutInHandleReq
	GroupPutInHandleResp  = social.GroupPutInHandleResp
	GroupPutInListReq     = social.GroupPutInListReq
	GroupPutInListResp    = social.GroupPutInListResp
	GroupPutInReq         = social.GroupPutInReq
	GroupPutInResp        = social.GroupPutInResp
	GroupRequest          = social.GroupRequest
	GroupUsersReq         = social.GroupUsersReq
	GroupUsersResp        = social.GroupUsersResp

	Social interface {
		// 好友业务：请求好友、通过或拒绝申请、好友列表
		FriendPutIn(ctx context.Context, in *FriendPutInReq, opts ...grpc.CallOption) (*FriendPutInResp, error)
		FriendPutInHandle(ctx context.Context, in *FriendPutInHandleReq, opts ...grpc.CallOption) (*FriendPutInHandleResp, error)
		FriendPutInList(ctx context.Context, in *FriendPutInListReq, opts ...grpc.CallOption) (*FriendPutInListResp, error)
		FriendList(ctx context.Context, in *FriendListReq, opts ...grpc.CallOption) (*FriendListResp, error)
		// 群业务：创建群，修改群，群公告，申请群，用户群列表，群成员，申请群，群退出..
		GroupCreate(ctx context.Context, in *GroupCreateReq, opts ...grpc.CallOption) (*GroupCreateResp, error)
		GroupPutIn(ctx context.Context, in *GroupPutInReq, opts ...grpc.CallOption) (*GroupPutInResp, error)
		GroupPutInList(ctx context.Context, in *GroupPutInListReq, opts ...grpc.CallOption) (*GroupPutInListResp, error)
		GroupPutInHandle(ctx context.Context, in *GroupPutInHandleReq, opts ...grpc.CallOption) (*GroupPutInHandleResp, error)
		GroupList(ctx context.Context, in *GroupListReq, opts ...grpc.CallOption) (*GroupListResp, error)
		GroupUsers(ctx context.Context, in *GroupUsersReq, opts ...grpc.CallOption) (*GroupUsersResp, error)
	}

	defaultSocial struct {
		cli zrpc.Client
	}
)

func NewSocial(cli zrpc.Client) Social {
	return &defaultSocial{
		cli: cli,
	}
}

// 好友业务：请求好友、通过或拒绝申请、好友列表
func (m *defaultSocial) FriendPutIn(ctx context.Context, in *FriendPutInReq, opts ...grpc.CallOption) (*FriendPutInResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.FriendPutIn(ctx, in, opts...)
}

func (m *defaultSocial) FriendPutInHandle(ctx context.Context, in *FriendPutInHandleReq, opts ...grpc.CallOption) (*FriendPutInHandleResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.FriendPutInHandle(ctx, in, opts...)
}

func (m *defaultSocial) FriendPutInList(ctx context.Context, in *FriendPutInListReq, opts ...grpc.CallOption) (*FriendPutInListResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.FriendPutInList(ctx, in, opts...)
}

func (m *defaultSocial) FriendList(ctx context.Context, in *FriendListReq, opts ...grpc.CallOption) (*FriendListResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.FriendList(ctx, in, opts...)
}

// 群业务：创建群，修改群，群公告，申请群，用户群列表，群成员，申请群，群退出..
func (m *defaultSocial) GroupCreate(ctx context.Context, in *GroupCreateReq, opts ...grpc.CallOption) (*GroupCreateResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.GroupCreate(ctx, in, opts...)
}

func (m *defaultSocial) GroupPutIn(ctx context.Context, in *GroupPutInReq, opts ...grpc.CallOption) (*GroupPutInResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.GroupPutIn(ctx, in, opts...)
}

func (m *defaultSocial) GroupPutInList(ctx context.Context, in *GroupPutInListReq, opts ...grpc.CallOption) (*GroupPutInListResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.GroupPutInList(ctx, in, opts...)
}

func (m *defaultSocial) GroupPutInHandle(ctx context.Context, in *GroupPutInHandleReq, opts ...grpc.CallOption) (*GroupPutInHandleResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.GroupPutInHandle(ctx, in, opts...)
}

func (m *defaultSocial) GroupList(ctx context.Context, in *GroupListReq, opts ...grpc.CallOption) (*GroupListResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.GroupList(ctx, in, opts...)
}

func (m *defaultSocial) GroupUsers(ctx context.Context, in *GroupUsersReq, opts ...grpc.CallOption) (*GroupUsersResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.GroupUsers(ctx, in, opts...)
}
