syntax = "v1"

info (
    title:  "用户服务的实例对象"
    author: "yanko"
)

type (
    Friend {
        Id int64 `json:"id,omitempty"`
        FriendUid string `json:"friendUid,omitempty"`
        Nickname string `json:"nickname,omitempty"`
        Avatar string `json:"avatar,omitempty"`
        Remark string `json:"remark,omitempty"`
    }

    FriendRequest {
        Id int64 `json:"id,omitempty"`
        UserId string `json:"userId,omitempty"`
        ReqUid string `json:"reqUid,omitempty"`
        ReqMsg string `json:"reqMsg,omitempty"`
        ReqTime      int64  `json:"reqTime,omitempty"`
        HandleResult int `json:"handleResult,omitempty"`
        HandleMsg string `json:"handleMsg,omitempty"`
    }

    Group {
        Id              string `json:"id,omitempty"`
        Name            string `json:"name,omitempty"`
        Icon            string `json:"icon,omitempty"`
        Status          int64  `json:"status,omitempty"`
        GroupType       int64  `json:"groupType,omitempty"`
        IsVerify        bool   `json:"isVerify"`
        Notification    string `json:"notification,omitempty"`
        NotificationUid string `json:"notificationUid,omitempty"`
    }

    GroupMember {
        Id            int64  `json:"id,omitempty"`
        GroupId       string `json:"groupId,omitempty"`
        UserId        string `json:"userId,omitempty"`
        Nickname      string `json:"nickname,omitempty"`
        UserAvatarUrl string `json:"userAvatarUrl,omitempty"`
        RoleLevel     int    `json:"roleLevel,omitempty"`
        InviterUid    string `json:"inviterUid,omitempty"`
        OperatorUid   string `json:"operatorUid,omitempty"`
    }

    GroupRequest {
        Id            int64  `json:"id,omitempty"`
        UserId        string `json:"userId,omitempty"`
        GroupId       string `json:"groupId,omitempty"`
        ReqMsg        string `json:"reqMsg,omitempty"`
        ReqTime       int64  `json:"reqTime,omitempty"`
        JoinSource    int64  `json:"joinSource,omitempty"`
        InviterUserId string `json:"inviterUserId,omitempty"`
        HandleUserId  string `json:"handleUserId,omitempty"`
        HandleTime    int64  `json:"handleTime,omitempty"`
        HandleResult  int64  `json:"handleResult,omitempty"`
    }
)

type (
    FriendPutInReq {
        ReqMsg  string `json:"reqMsg,omitempty"`
        UserId  string `json:"userId"`
    }
    FriendPutInResp {}
)

type (
    FriendPutInHandleReq {
        FriendReqId  int32 `json:"friendReqId,omitempty"`
        HandleResult int32 `json:"handleResult,omitempty"` // 处理结果
        HandleMsg   string `json:"handleMsg,omitempty"`
    }
    FriendPutInHandleResp {}
)

type (
    FriendPutInListReq  {}
    FriendPutInListResp {
        List []*FriendRequest `json:"list"`
    }
)

type (
    FriendListReq  {}
    FriendListResp {
        List []*Friend `json:"list"`
    }
)

type (
	FriendsOnlineReq {}

	FriendsOnlineResp {
		OnlineList map[string]bool `json:"onLineList"`
	}
)

type (
    GroupCreateReq {
        Name string `json:"name,omitempty"`
        Icon string `json:"icon,omitempty"`
        IsVerify bool   `json:"isVerify,optional,default=false"`
    }
    GroupCreateResp {}
)

type (
    GroupPutInReq {
        GroupId    string `json:"groupId,omitempty"`
        ReqMsg     string `json:"reqMsg,omitempty"`
        InviterUid string `json:"inviterUid,omitempty,optional"`
        JoinSource int64  `json:"joinSource,omitempty"`
    }
    GroupPutInResp {}
)

type (
    GroupPutInHandleReq {
        GroupReqId   int32  `json:"groupReqId,omitempty"`
        GroupId      string `json:"groupId,omitempty"`
        HandleResult int32  `json:"handleResult,omitempty"` // 处理结果
    }
    GroupPutInHandleResp {}
)

type (
    GroupPutInListReq {
        GroupId string `form:"groupId,omitempty"`
    }
    GroupPutInListResp {
        List []*GroupRequest `json:"list,omitempty"`
    }
)

type (
    GroupListReq  {}
    GroupListResp {
        List []*Group `form:"list,omitempty"`
    }
)

type (
    GroupUserListReq {
        GroupId string `form:"groupId,omitempty"`
    }
    GroupUserListResp {
        List []*GroupMember `json:"list,omitempty"`
    }
)

type (
	GroupUserOnlineReq {
		GroupId string `form:"groupId"`
	}

	GroupUserOnlineResp {
		OnlineList map[string]bool `json:"onLineList"`
	}
)